{"version":3,"sources":["contexts/expenseContext.js","components/AddEntry.jsx","components/Summary.jsx","components/TotalBalance.jsx","components/Entry.jsx","components/Entries.jsx","App.jsx","index.js"],"names":["ExpenseContext","createContext","ExpenseContextProvider","props","useState","id","description","amount","entries","setEntries","Provider","value","handleDelete","filter","entry","addEntry","newEntry","children","AddEntry","setDescription","setAmount","useContext","className","htmlFor","onChange","e","target","type","onClick","preventDefault","Math","floor","random","Summary","income","expense","forEach","el","parseInt","TotalBalance","sum","Entry","Entries","map","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4b1248c9.chunk.js","sourcesContent":["import React, {createContext, useState} from 'react';\r\n\r\nexport const ExpenseContext = createContext();\r\n\r\nexport const ExpenseContextProvider = (props) => {\r\n\r\n    const[entries, setEntries] = useState([\r\n        {id: 1, description: \"pizza\", amount: -20},\r\n        {id: 2, description: \"Salary\", amount: 100},\r\n        {id: 3, description: \"Uber\", amount: -15},\r\n        {id: 4, description: \"extra small condoms\", amount: 6},\r\n        {id: 5, description: \"tax return\", amount: 50 },\r\n\r\n    ]);\r\n\r\n    const handleDelete = (id) => {\r\n        setEntries(entries.filter((entry) => entry.id !== id))\r\n    };\r\n\r\n    const addEntry = (newEntry) => {\r\n        setEntries([...entries, newEntry])\r\n    }\r\n\r\n    return (\r\n        <ExpenseContext.Provider value={{entries, handleDelete, addEntry}}>\r\n            {props.children}\r\n        </ExpenseContext.Provider>\r\n    )\r\n};\r\n\r\n\r\n\r\n","import React, {useContext, useState} from 'react';\r\nimport { ExpenseContext } from '../contexts/expenseContext';\r\n\r\nconst AddEntry = () => {\r\n        const [description, setDescription] = useState(\"\")\r\n        const [amount, setAmount] = useState(\"\")\r\n\r\n        const {addEntry} = useContext(ExpenseContext)\r\n        \r\n        const handleSubmit = (e) => {\r\n            e.preventDefault()\r\n            const newEntry = {\r\n                id: Math.floor(Math.random()*99999999),\r\n                description,\r\n                amount\r\n            }\r\n            addEntry(newEntry);\r\n        }\r\n    return <div className=\"border border-info rounded p-4 mt-4\">\r\n        <form className=\"form-group \">\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"description\">description</label>\r\n                <input onChange={(e) => setDescription(e.target.value)} value={description} type=\"text\" id=\"description\" className=\"form-control\"/>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"amount\">Amount</label>\r\n                <input onChange={(e) => setAmount(e.target.value)} value={amount} type=\"number\" id=\"amount\" className=\"form-control\"/>\r\n            </div>\r\n        </form>\r\n         <button onClick={handleSubmit} value={amount} type=\"submit\" className=\"btn btn-info\">Add Entry</button>\r\n            \r\n        </div>;\r\n    \r\n};\r\n\r\nexport default AddEntry;\r\n","import React, {useContext} from 'react';\r\nimport {ExpenseContext} from '../contexts/expenseContext';\r\n\r\n\r\nconst Summary = () => {\r\n\r\n        const {entries} = useContext(ExpenseContext)\r\n\r\n        let income = 0;\r\n        let expense = 0;\r\n\r\n        entries.forEach(el => {\r\n            if (el.amount > 0) {\r\n                income += parseInt(el.amount)\r\n            } else {\r\n                expense += parseInt(el.amount)\r\n            }\r\n        })\r\n\r\n    return <div className=\"row\">\r\n            <div className=\"col-sm-6\">\r\n                <div className=\"card border-success\">\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title text-center\">Income</h5>\r\n                        <h4 className=\"text-center text-success display-5\">+${income}</h4>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"col-sm-6\">\r\n                <div className=\"card border-danger\">\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title text-center\">Expenses</h5>\r\n                        <h4 className=\"text-center text-danger display-5\">-${expense}</h4>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>;\r\n   \r\n};\r\n\r\nexport default Summary;\r\n","import React, {useContext} from 'react';\r\nimport { ExpenseContext } from '../contexts/expenseContext';\r\n\r\nconst TotalBalance = () => {\r\n        const {entries} = useContext(ExpenseContext);\r\n        let sum = 0\r\n        entries.forEach((el) => {\r\n            sum += parseInt(el.amount)\r\n        });\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h2 className=\"display-3 text-center\">${sum}</h2>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TotalBalance;\r\n","import React, {useContext} from 'react';\r\nimport { ExpenseContext } from '../contexts/expenseContext';\r\n\r\nconst Entry = (props) => {\r\n\r\n       const{handleDelete} = useContext(ExpenseContext)\r\n    return (\r\n        <div>\r\n            <li className={`entry-item mt-2 list-group-item list-group-item-action list-group-item-${props.entry.amount > 0 ? \"success\": \"danger\"}`}>\r\n                {props.entry.description}\r\n                <button onClick={() => handleDelete(props.entry.id)} className=\"close-button close\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n                    <span className=\"float-right\">\r\n                        {props.entry.amount > 0 ? \"+\" : \"\"}\r\n                        {props.entry.amount}{\" \"}\r\n                    </span>\r\n            </li>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Entry;\r\n\r\n","import React, { useContext } from 'react';\r\nimport Entry from './Entry';\r\nimport {ExpenseContext} from '../contexts/expenseContext';\r\n\r\nconst Entries = () => {\r\n\r\n        const {entries} = useContext(ExpenseContext)\r\n    return (\r\n        <div className=\"mt-4\">\r\n            <h4 className=\"display-6\">Entries</h4>\r\n            <hr/>\r\n\r\n            <div className=\"list-group\">\r\n                {entries && entries.map(el => {\r\n                    return <Entry key={el.id} entry={el}/>\r\n                })}\r\n            </div>\r\n\r\n            <hr/>\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default Entries;","import React from 'react';\r\nimport AddEntry from './components/AddEntry';\r\nimport Summary from './components/Summary';\r\nimport TotalBalance from \"./components/TotalBalance\";\r\nimport Entries from './components/Entries';\r\nimport { ExpenseContextProvider } from './contexts/expenseContext';\r\nimport \"./App.css\";\r\n\r\n\r\nconst App = () => {\r\n    return (\r\n      <ExpenseContextProvider>\r\n        <div className=\"container justify-content-center\">\r\n          <TotalBalance/>\r\n          <Summary/>\r\n          <AddEntry/>\r\n          <Entries/>\r\n        </div>\r\n        </ExpenseContextProvider>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from \"./App\"\r\n\r\nReactDOM.render(<App/>, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}